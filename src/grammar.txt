Programs        prog ::= f1 = obj1; ... ; fn = objn

Heap objects    obj ::= FUN (x1 ... xn -> e)            Function (arity = n  1)
                    | PAP(f a1 ... an)                  Partial appliation (f is always a
                                                        FUN with arity(f ) > n >= 1)
                    | CON (C a1 ... an)                 Saturated construtor (n >= 0)
                    | THUNK e                           Thunk
                    | BLACKHOLE                         only during evaluationâ„„

Alternatives    alt ::= C x1 ... xn -> e                (n  0)
                    | x -> e                            Default alternative

Expressions     e ::= a                                 Atom
                    | fk a1 ... an                      Funtion all (n >= 1)
                    | (+) a1 ... an                     Saturated primitive operation (n >= 1)
                    | let x = obj in e
                    | case e of {alt1; ... ; altn}      (n >= 1)

Variables       x, y, f, g
Construtors     C                                       Defined in data type delarations
Literals        lit ::= i | d                           Unboxed integer or double
Atoms           a, v ::= lit | x                        Function arguments are atomi
Funtion arity   k ::= (.)                               Unknown arity
                    | n                                 Known arity n  1
